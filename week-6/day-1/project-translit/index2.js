document.addEventListener("DOMContentLoaded", function () {
  const textInput = document.getElementById("textToTranslate");
  const addButton = document.getElementById("addButton");
  const leftTableBody = document.querySelector("#leftTable tbody");
  const rightTableBody = document.querySelector(".rightTable tbody");
  const clearButton = document.querySelector(".clearButton");

  let currentNumber = 1;

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
  function transliterate(text) {
    const translitMap = {
      –∞: "a",
      –±: "b",
      –≤: "v",
      –≥: "g",
      –¥: "d",
      –µ: "e",
      —ë: "yo",
      –∂: "zh",
      –∑: "z",
      –∏: "i",
      –π: "j",
      –∫: "k",
      –ª: "l",
      –º: "m",
      –Ω: "n",
      –æ: "o",
      –ø: "p",
      —Ä: "r",
      —Å: "s",
      —Ç: "t",
      —É: "u",
      —Ñ: "f",
      —Ö: "h",
      —Ü: "c",
      —á: "ch",
      —à: "sh",
      —â: "sch",
      —ä: "",
      —ã: "y",
      —å: "'",
      —ç: "e",
      —é: "yu",
      —è: "ya",
      –ê: "A",
      –ë: "B",
      –í: "V",
      –ì: "G",
      –î: "D",
      –ï: "E",
      –Å: "YO",
      –ñ: "ZH",
      –ó: "Z",
      –ò: "I",
      –ô: "J",
      –ö: "K",
      –õ: "L",
      –ú: "M",
      –ù: "N",
      –û: "O",
      –ü: "P",
      –†: "R",
      –°: "S",
      –¢: "T",
      –£: "U",
      –§: "F",
      –•: "H",
      –¶: "C",
      –ß: "CH",
      –®: "SH",
      –©: "SCH",
      –™: "",
      –´: "Y",
      –¨: "'",
      –≠: "E",
      –Æ: "YU",
      –Ø: "YA",
    };

    return text
      .split("")
      .map((char) => translitMap[char] || char)
      .join("");
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º —Å —Ç–µ–∫—Å—Ç–æ–º –±–æ–ª—å—à–µ 7 —Å–∏–º–≤–æ–ª–æ–≤
  function applyEllipsisToLongText() {
    const leftElementsToCheck = document.querySelectorAll("#leftTable .mnogabukv");
    const rightElementsToCheck = document.querySelectorAll(".rightTable .mnogabukv");
    const tooltip = document.querySelector(".tooltip");

    leftElementsToCheck.forEach((element) => {
      if (element.textContent.length > 7) {
        element.style.overflow = "hidden";
        element.style.whiteSpace = "nowrap";
        element.style.textOverflow = "ellipsis";

        element.addEventListener("mouseenter", () => {
          tooltip.textContent = element.textContent;
          tooltip.style.left = element.getBoundingClientRect().left - 10 + "px";
          tooltip.style.top = element.getBoundingClientRect().top - 40 + "px";
          tooltip.style.display = "block";
        });

        element.addEventListener("mouseleave", () => {
          tooltip.style.display = "none";
        });
      }
    });

    rightElementsToCheck.forEach((element) => {
      if (element.textContent.length > 7) {
        element.style.overflow = "hidden";
        element.style.whiteSpace = "nowrap";
        element.style.textOverflow = "ellipsis";

        element.addEventListener("mouseenter", () => {
          tooltip.textContent = element.textContent;
          tooltip.style.left = element.getBoundingClientRect().left + "px";
          tooltip.style.top = element.getBoundingClientRect().top - 30 + "px";
          tooltip.style.display = "block";
        });

        element.addEventListener("mouseleave", () => {
          tooltip.style.display = "none";
        });
      }
    });
  }

  applyEllipsisToLongText();

  // –î–æ–±–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ "–ü—Ä–∏–≤–µ—Ç" –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const initialText = "–ü—Ä–∏–≤–µ—Ç üëã";
  const transliteratedText = transliterate(initialText);

  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –ª–µ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
  const leftTableRow = leftTableBody.insertRow();
  const leftNumberCell = leftTableRow.insertCell(0);
  const leftTextCell = leftTableRow.insertCell(1);

  // –û–±–Ω–æ–≤–ª—è–µ–º currentNumber –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ
  currentNumber = leftTableBody.rows.length;

  leftNumberCell.textContent = currentNumber;
  leftTextCell.textContent = initialText;

  // –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –ø—Ä–∞–≤—É—é —Ç–∞–±–ª–∏—Ü—É
  const rightTableRow = rightTableBody.insertRow();
  const rightTranslationCell = rightTableRow.insertCell(0);
  const rightDeleteCell = rightTableRow.insertCell(1);
  rightTranslationCell.textContent = transliteratedText;

  // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤ –ø—Ä–∞–≤—É—é —Ç–∞–±–ª–∏—Ü—É
  rightTranslationCell.classList.add("transliteration-right");

  rightDeleteCell.innerHTML =
    '<img src="./img/Delete.svg" class="deleteButton" alt="Delete">';

  if (currentNumber === 1) {
    const deleteButton = rightDeleteCell.querySelector(".deleteButton");
    deleteButton.disabled = true;
  }

  if (currentNumber === 1) {
    const deleteButton = rightDeleteCell.querySelector(".deleteButton");
    deleteButton.disabled = true;
  }

  addButton.addEventListener("click", function (event) {
    event.preventDefault();

    const text = textInput.value;

    if (text.trim() !== "") {
      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –ª–µ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
      const leftTableRow = leftTableBody.insertRow();
      const leftNumberCell = leftTableRow.insertCell(0);
      const leftTextCell = leftTableRow.insertCell(1);

      // –û–±–Ω–æ–≤–ª—è–µ–º currentNumber –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ
      currentNumber = leftTableBody.rows.length;

      leftNumberCell.textContent = currentNumber;

      // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –∫–ª–∞—Å—Å–æ–º .mnogabukv –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏
      const textElement = document.createElement("div");
      textElement.textContent = text;
      textElement.className = "mnogabukv";

      leftTextCell.appendChild(textElement);

      // –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
      const transliteratedText =
        text.length > 7
          ? transliterate(text.slice(0, 7)) + "..."
          : transliterate(text);
      // –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –ø—Ä–∞–≤—É—é —Ç–∞–±–ª–∏—Ü—É
      const rightTableRow = rightTableBody.insertRow();
      const rightTranslationCell = rightTableRow.insertCell(0);
      const rightDeleteCell = rightTableRow.insertCell(1);
      rightTranslationCell.textContent = transliteratedText;

      // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤ –ø—Ä–∞–≤—É—é —Ç–∞–±–ª–∏—Ü—É
      rightTranslationCell.classList.add("transliteration-right");

      rightDeleteCell.innerHTML =
        '<img src="./img/Delete.svg" class="deleteButton" alt="Delete">';

      textInput.value = "";

      // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π –∫ –Ω–æ–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
      applyEllipsisToLongText();
    }
  });

  textInput.addEventListener("keydown", function (event) {
    if (event.key === "Enter") {
      event.preventDefault();

      const text = textInput.value.trim();

      if (text !== "") {
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –ª–µ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
        const leftTableRow = leftTableBody.insertRow();
        const leftNumberCell = leftTableRow.insertCell(0);
        const leftTextCell = leftTableRow.insertCell(1);

        // –û–±–Ω–æ–≤–ª—è–µ–º currentNumber –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ
        currentNumber = leftTableBody.rows.length;

        leftNumberCell.textContent = currentNumber;

        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –∫–ª–∞—Å—Å–æ–º .mnogabukv –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏
        const textElement = document.createElement("div");
        textElement.textContent = text;
        textElement.className = "mnogabukv";

        leftTextCell.appendChild(textElement);

        // –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        const transliteratedText =
          text.length > 7
            ? transliterate(text.slice(0, 7)) + "..."
            : transliterate(text);
        // –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –ø—Ä–∞–≤—É—é —Ç–∞–±–ª–∏—Ü—É
        const rightTableRow = rightTableBody.insertRow();
        const rightTranslationCell = rightTableRow.insertCell(0);
        const rightDeleteCell = rightTableRow.insertCell(1);
        rightTranslationCell.textContent = transliteratedText;

        // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤ –ø—Ä–∞–≤—É—é —Ç–∞–±–ª–∏—Ü—É
        rightTranslationCell.classList.add("transliteration-right");

        rightDeleteCell.innerHTML =
          '<img src="./img/Delete.svg" class="deleteButton" alt="Delete">';

        textInput.value = "";
        applyEllipsisToLongText();
      }
    }
  });

  clearButton.addEventListener("click", function () {
    while (leftTableBody.rows.length > 1) {
      leftTableBody.deleteRow(1);
      rightTableBody.deleteRow(1);
    }
  });

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
  rightTableBody.addEventListener("click", function (event) {
    if (event.target.classList.contains("deleteButton")) {
      const rowToDelete = event.target.closest("tr");

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É–¥–∞–ª—è–µ–º–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–µ—Ä–≤–æ–π
      if (rowToDelete.rowIndex === 1) {
        // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞, –ø—Ä–æ—Å—Ç–æ –∑–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∏ –Ω–µ —É–¥–∞–ª—è–µ–º –µ–µ
        return;
      }

      // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞, —É–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –∫–∞–∫ –æ–±—ã—á–Ω–æ
      leftTableBody.deleteRow(rowToDelete.rowIndex - 1);
      rightTableBody.deleteRow(rowToDelete.rowIndex - 1);

      // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–æ–º–µ—Ä–∞ –≤ –ª–µ–≤–æ–π —Ç–∞–±–ª–∏—Ü–µ
      const leftTableRows = leftTableBody.querySelectorAll("tr");
      leftTableRows.forEach((row, index) => {
        const leftNumberCell = row.cells[0];
        leftNumberCell.textContent = index + 1;
      });

      // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
      applyEllipsisToLongText();
    }
  });
});
